{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","onClick","tabId","href","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE3CE,GACHD,EAAc,SAShB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWF,EAAIC,KAAOL,EAAgB,YAAc,GACpD,UAAQ,MAERQ,QAAS,WAfQ,IAACC,KAekBL,EAAIC,MAdpCL,GACZC,EAAcQ,IASR,SAME,mBAAGC,KAAI,WAAMN,EAAIC,IAAM,UAAQ,UAA/B,SAA0CD,EAAIO,SAHzCP,EAAIC,WASjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAaU,cCnCTb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAAS,SAAjD,mBAAOd,EAAP,KAAsBe,EAAtB,KACMb,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,sBAAKM,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBJ,QADtB,IACsBA,OADtB,EACsBA,EAAaS,SAGnC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAAec,QCxBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7da16d11.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (newId: string) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  if (!selectedTab) {\n    onTabSelected('tab-1');\n  }\n\n  const hendlerOnTabSelected = (tabId: string) => {\n    if (tabId !== selectedTabId) {\n      onTabSelected(tabId);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li // eslint-disable-line\n              className={tab.id === selectedTabId ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n              onClick={() => hendlerOnTabSelected(tab.id)}\n            >\n              <a href={`#${tab.id}`} data-cy=\"TabLink\">{tab.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState('tab-1');\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}